name: Snakemake checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        snakefile: workflow/Snakefile
        args: "--lint"

  Testing:
    runs-on: ubuntu-latest
#    needs:
#      - Linting
#      - Formatting
    steps:
    - uses: actions/checkout@v2

    - name: Test
      uses: snakemake/snakemake-github-action@v1
      with:
        directory: .
        snakefile: workflow/Snakefile
        args: "--use-conda --show-failed-logs -j 10 --conda-cleanup-pkgs cache --conda-frontend mamba"
        stagein: "conda config --get channel_priority --json"

    - name: check output
      run: |
        test $(wc -l  outputs/results/test.csv | cut -d' ' -f 1) -eq 6
        test $(head -1 outputs/results/test.csv) = 'query,Run,containment'
        test $(grep -c SRR5506584 outputs/results/test.csv) -eq 1
        test $(grep -c SRR5506691 outputs/results/test.csv) -eq 1
        test $(grep -c SRR5506585 outputs/results/test.csv) -eq 1
        test $(grep -c SRR5506558 outputs/results/test.csv) -eq 1
        test $(grep -c SRR5506583 outputs/results/test.csv) -eq 1
